# -*- coding: utf-8 -*-
"""AI3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wul3sfNdZpob4suTFEmPgq1GE8t7X0ts
"""

import sys
 
class DisjointSet:
    def __init__(self, n):
        self.parent = [i for i in range(n + 1)]
 
    def find(self, s):
   
       
        if s == self.parent[s]:
            return s
        self.parent[s] = self.find(self.parent[s])
        return self.parent[s]
 
   
    def merge(self, u, v):
       
   
        self.parent[v] = u
 
def cmp(a):
    return a['profit']
 
def findmaxdeadline(arr, n):
   
    ans = - sys.maxsize - 1
    for i in range(n):
        ans = max(ans, arr[i]['deadline'])
    return ans
 
def printjobscheduling(arr, n):
   
   
    arr = sorted(arr, key = cmp, reverse = True)
 
   
    max_deadline = findmaxdeadline(arr, n)
    ds = DisjointSet(max_deadline)
 
    for i in range(n):
 
       
        available_slot = ds.find(arr[i]['deadline'])
        if available_slot > 0:
 
           
            ds.merge(ds.find(available_slot - 1),
                            available_slot)
            print(arr[i]['id'], end = " ")
 
# Driver Code
if __name__ == "__main__":
    arr = [{'id': 'a', 'deadline': 2, 'profit': 100},
        {'id': 'b', 'deadline': 1, 'profit': 19},
        {'id': 'c', 'deadline': 2, 'profit': 27},
        {'id': 'd', 'deadline': 1, 'profit': 25},
        {'id': 'e', 'deadline': 3, 'profit': 15}]
    n = len(arr)
    print("Following jobs need to be",
        "executed for maximum profit")
    printjobscheduling(arr, n)